volumes:
  postgres:
  redis:

secrets:
  POSTGRES_DB:
    external: true
  POSTGRES_USER:
    external: true
  POSTGRES_PASSWORD:
    external: true
  REDIS_PASSWORD:
    external: true
  POSTGRES_URL:
    external: true
  HONO_BETTER_AUTH_SECRET:
    external: true
  GOOGLE_CLIENT_ID:
    external: true
  GOOGLE_CLIENT_SECRET:
    external: true
  NODEMAILER_AUTH_USER:
    external: true
  NODEMAILER_AUTH_PASS:
    external: true

services:
  dozzle:
    deploy:
      restart_policy:
        condition: any
      update_config:
        order: start-first
    image: amir20/dozzle:latest
    environment:
      - DOZZLE_NO_ANALYTICS=true
    ports:
      - '8080:8080'
    healthcheck:
      start_period: 30s
      start_interval: 5s
      test: ['CMD', '/dozzle', 'healthcheck']
      interval: 10s
      timeout: 5s
      retries: 2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  postgres:
    deploy:
      restart_policy:
        condition: any
      update_config:
        order: start-first
    depends_on:
      - dozzle
    image: ghcr.io/alexpassalis/image-postgres:latest
    env_file:
      - ./apps/postgres/.env.production
    secrets:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    environment:
      POSTGRES_DB_FILE: /run/secrets/POSTGRES_DB
      POSTGRES_USER_FILE: /run/secrets/POSTGRES_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
    healthcheck:
      start_period: 30s
      start_interval: 5s
      test:
        [
          'CMD-SHELL',
          'pg_isready -d $$(cat /run/secrets/POSTGRES_DB) -U $$(cat /run/secrets/POSTGRES_USER)',
        ]
      interval: 10s
      timeout: 5s
      retries: 2
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    deploy:
      restart_policy:
        condition: any
      update_config:
        order: start-first
    depends_on:
      - dozzle
    image: redis:7.0-alpine3.17
    volumes:
      - ./apps/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis:/data
    command:
      [
        'redis-server',
        '/usr/local/etc/redis/redis.conf',
        '--save',
        '60',
        '1',
        '--loglevel',
        'notice',
      ]
    secrets:
      - REDIS_PASSWORD
    healthcheck:
      start_period: 30s
      start_interval: 5s
      test:
        [
          'CMD-SHELL',
          'redis-cli -h localhost -p 6379 -a $$(cat /run/secrets/REDIS_PASSWORD) ping | grep PONG || exit 1',
        ]
      interval: 10s
      timeout: 5s
      retries: 2

  hono:
    deploy:
      restart_policy:
        condition: any
      update_config:
        order: start-first
      mode: replicated
      replicas: 2
    depends_on:
      - postgres
      - redis
    image: ghcr.io/alexpassalis/image-hono:latest
    env_file:
      - ./apps/hono/.env.production
    secrets:
      - POSTGRES_URL
      - REDIS_PASSWORD
      - HONO_BETTER_AUTH_SECRET
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      - NODEMAILER_AUTH_USER
      - NODEMAILER_AUTH_PASS
    environment:
      POSTGRES_URL: /run/secrets/POSTGRES_URL
      REDIS_PASSWORD: /run/secrets/REDIS_PASSWORD
      HONO_BETTER_AUTH_SECRET: /run/secrets/HONO_BETTER_AUTH_SECRET
      GOOGLE_CLIENT_ID: /run/secrets/GOOGLE_CLIENT_ID
      GOOGLE_CLIENT_SECRET: /run/secrets/GOOGLE_CLIENT_SECRET
      NODEMAILER_AUTH_USER: /run/secrets/NODEMAILER_AUTH_USER
      NODEMAILER_AUTH_PASS: /run/secrets/NODEMAILER_AUTH_PASS
    ports:
      - '4000:4000'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -f http://localhost:4000/api/healthcheck | grep ok || exit 1',
        ]
      interval: 10s
      timeout: 10s
      retries: 2
