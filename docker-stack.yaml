secrets:
  POSTGRES_DB:
    external: true
  POSTGRES_USER:
    external: true
  POSTGRES_PASSWORD:
    external: true
  REDIS_PASSWORD:
    external: true

services:
  dozzle:
    deploy:
      update_config:
        order: start-first
    image: amir20/dozzle:latest
    container_name: container-dozzle
    networks:
      - app-network
    ports:
      - '127.0.0.1:8080:8080'
    healthcheck:
      start_period: 30s
      start_interval: 5s
      test: ['CMD', '/dozzle', 'healthcheck']
      interval: 10s
      timeout: 5s
      retries: 2
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  postgres:
    deploy:
      update_config:
        order: start-first
    depends_on:
      dozzle:
        condition: service_healthy
    image: ghcr.io/alexpassalis/image-postgres:latest
    container_name: container-postgres
    networks:
      - app-network
    env_file:
      - ./apps/postgres/.env.production
    secrets:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    environment:
      POSTGRES_DB_FILE: /run/secrets/POSTGRES_DB
      POSTGRES_USER_FILE: /run/secrets/POSTGRES_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
    healthcheck:
      start_period: 30s
      start_interval: 5s
      test:
        [
          'CMD-SHELL',
          'pg_isready -d $(cat /run/secrets/POSTGRES_DB) -U $(cat /run/secrets/POSTGRES_USER)',
        ]
      interval: 10s
      timeout: 5s
      retries: 2
    restart: always
    volumes:
      - ./../volumes/postgresql/data:/var/lib/postgresql/data

  redis:
    deploy:
      update_config:
        order: start-first
    depends_on:
      dozzle:
        condition: service_healthy
    image: ghcr.io/alexpassalis/image-redis:latest
    container_name: container-redis
    networks:
      - app-network
    secrets:
      - REDIS_PASSWORD
    healthcheck:
      start_period: 30s
      start_interval: 5s
      test:
        [
          'CMD-SHELL',
          'redis-cli -h localhost -p 6379 -a $(cat /run/secrets/REDIS_PASSWORD) ping | grep PONG || exit 1',
        ]
      interval: 10s
      timeout: 5s
      retries: 2
    restart: always
