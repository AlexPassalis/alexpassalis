name: Build Docker Images

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository into GitHub Actions runner (ubuntu VM)
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (build tool)
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Convert the repository owner name to lowercase
        run: |
          echo "OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and tag image-postgres
        run: |
          IMAGE_NAME="ghcr.io/$OWNER/image-postgres"

          # Generate a timestamp tag
          TIMESTAMP=$(date +%Y%m%d%H%M%S)

          # Build the image and tag it with "latest"
          docker build -t $IMAGE_NAME:latest -f apps/postgres/Dockerfile .

          # Explicitly tag the image with the timestamp
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$TIMESTAMP

          # Store TIMESTAMP for later use in push step
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: Push image-postgres to GHCR
        run: |
          IMAGE_NAME="ghcr.io/$OWNER/image-postgres"

          # Use the stored TIMESTAMP value
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$TIMESTAMP
