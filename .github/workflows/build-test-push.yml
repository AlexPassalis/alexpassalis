name: CI/CD Pipeline

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository into GitHub Actions runner (ubuntu VM)
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (build tool)
        uses: docker/setup-buildx-action@v2

      - name: Convert the repository owner name to lowercase
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "OWNER=$OWNER" >> $GITHUB_ENV

      - name: Generate a common TIMESTAMP for all images
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: image-postgres (build and tag)
        run: |
          IMAGE_NAME="ghcr.io/$OWNER/image-postgres"

          # Build the image and tag it with "latest"
          docker build -t $IMAGE_NAME:latest -f ./apps/postgres/Dockerfile ./apps/postgres

          # Explicitly tag the image with the timestamp
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$TIMESTAMP

      - name: image-redis (build and tag)
        run: |
          IMAGE_NAME="ghcr.io/$OWNER/image-redis"
          docker build --target build -t $IMAGE_NAME:latest -f ./apps/redis/Dockerfile ./apps/redis
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$TIMESTAMP

      - name: image-hono (build, test and tag)
        run: |
          IMAGE_NAME="ghcr.io/$OWNER/image-hono"
          docker build --target build -t $IMAGE_NAME:latest -f ./apps/hono/Dockerfile ./apps/hono

          # Run tests inside a container
          docker run --rm \
            --name container-hono \
            -e HONO_HOSTNAME=${{ variables.HONO_HOSTNAME }} \
            -e HONO_PORT=${{ variables.HONO_PORT }} \
            -e HONO_NEXT_JS_ORIGIN=${{ variables.HONO_NEXT_JS_ORIGIN }} \
            -e HONO_BETTER_AUTH_URL=${{ variables.HONO_BETTER_AUTH_URL }} \
            -e HONO_BETTER_AUTH_SECRET=${{ secrets.HONO_BETTER_AUTH_SECRET }} \
            $IMAGE_NAME:latest pnpm run test

          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$TIMESTAMP

  # push:
  #   - name: Log in to GitHub Container Registry (GHCR)
  #     uses: docker/login-action@v2
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GHCR_PAT }}

  # - name: Push image-postgres to GHCR
  #   run: |
  #     IMAGE_NAME="ghcr.io/$OWNER/image-postgres"

  #     # Use the stored TIMESTAMP value
  #     docker push $IMAGE_NAME:latest
  #     docker push $IMAGE_NAME:$TIMESTAMP
