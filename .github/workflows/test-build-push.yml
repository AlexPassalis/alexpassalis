name: Test Build Push

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository into GitHub Actions runner (ubuntu VM)
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (build tool)
        uses: docker/setup-buildx-action@v2

      - name: image-hono (test)
        env:
          HONO_HOSTNAME: 0.0.0.0
          HONO_PORT: 4000
          HONO_NEXTJS_ORIGIN: https://localhost
          HONO_BETTER_AUTH_URL: https://localhost
          HONO_BETTER_AUTH_SECRET: f69e0cca7a547dd2631ba01edf50fdce07f6ce8e8d40c1d44e9d309bb3e992611335f466207319e4b97f8263e474d1c4540aec539f7492c88a0480e8926ce382
          HONO_LOG_LEVEL_TEST: silent
        run: |
          docker build --target test -t image-hono-test -f ./apps/hono/Dockerfile ./apps/hono

          docker run --rm \
            --name container-hono-test \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e HONO_HOSTNAME=$HONO_HOSTNAME \
            -e HONO_PORT=$HONO_PORT \
            -e HONO_NEXTJS_ORIGIN=$HONO_NEXTJS_ORIGIN \
            -e HONO_BETTER_AUTH_URL=$HONO_BETTER_AUTH_URL \
            -e HONO_BETTER_AUTH_SECRET=$HONO_BETTER_AUTH_SECRET \
            -e HONO_LOG_LEVEL_TEST=$HONO_LOG_LEVEL_TEST \
            image-hono-test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository into GitHub Actions runner (ubuntu VM)
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (build tool)
        uses: docker/setup-buildx-action@v2

      - name: Convert the repository owner name to lowercase
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "OWNER=$OWNER" >> $GITHUB_ENV

      - name: Define image environment variables
        run: |
          echo "IMAGE_POSTGRES=ghcr.io/$OWNER/image-postgres" >> $GITHUB_ENV
          echo "IMAGE_REDIS=ghcr.io/$OWNER/image-redis" >> $GITHUB_ENV
          echo "IMAGE_HONO=ghcr.io/$OWNER/image-hono" >> $GITHUB_ENV

      - name: Generate a common TIMESTAMP for all images
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: postgres (build and tag)
        run: |
          docker build \
          -t $IMAGE_POSTGRES:latest \
          -f ./apps/postgres/Dockerfile \
          ./apps/postgres

          docker tag \
          $IMAGE_POSTGRES:latest \
          $IMAGE_POSTGRES:$TIMESTAMP

      - name: redis (build and tag)
        run: |
          docker build \
          -t $IMAGE_REDIS:latest \
          -f ./apps/redis/Dockerfile \
          ./apps/redis

          docker tag \
          $IMAGE_REDIS:latest \
          $IMAGE_REDIS:$TIMESTAMP

      - name: hono (build and tag)
        run: |
          docker build \
          -t $IMAGE_HONO:latest \
          -f ./apps/hono/Dockerfile \
          ./apps/hono

          docker tag \
          $IMAGE_HONO:latest \
          $IMAGE_HONO:$TIMESTAMP

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push all images
        run: |
          docker push $IMAGE_POSTGRES:latest
          docker push $IMAGE_POSTGRES:$TIMESTAMP

          docker push $IMAGE_REDIS:latest
          docker push $IMAGE_REDIS:$TIMESTAMP

          docker push $IMAGE_HONO:latest
          docker push $IMAGE_HONO:$TIMESTAMP
