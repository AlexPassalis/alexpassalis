name: Test Build Push

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository into GitHub Actions runner (ubuntu VM)
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (build tool)
        uses: docker/setup-buildx-action@v2

      - name: Convert the repository owner name to lowercase
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "OWNER=$OWNER" >> $GITHUB_ENV

      - name: Generate a common TIMESTAMP for all images
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: image-postgres (build and tag)
        run: |
          IMAGE_NAME="ghcr.io/$OWNER/image-postgres"

          # Build the image and tag it with "latest"
          docker build \
            -t $IMAGE_NAME:latest \
            -f ./apps/postgres/Dockerfile \
            ./apps/postgres

          # Explicitly tag the image with the timestamp
          docker tag \
            $IMAGE_NAME:latest \
            $IMAGE_NAME:$TIMESTAMP

      - name: image-redis (build and tag)
        run: |
          IMAGE_NAME="ghcr.io/$OWNER/image-redis"

          docker build \
            -t $IMAGE_NAME:latest \
            -f ./apps/redis/Dockerfile \
            ./apps/redis

          docker tag \
            $IMAGE_NAME:latest \
            $IMAGE_NAME:$TIMESTAMP

      - name: image-hono (test, build and tag)
        env:
          HONO_HOSTNAME: ${{ vars.HONO_HOSTNAME }}
          HONO_PORT: ${{ vars.HONO_PORT }}
          HONO_NEXTJS_ORIGIN: ${{ vars.HONO_NEXTJS_ORIGIN }}
          HONO_BETTER_AUTH_URL: ${{ vars.HONO_BETTER_AUTH_URL }}
          HONO_BETTER_AUTH_SECRET: f69e0cca7a547dd2631ba01edf50fdce07f6ce8e8d40c1d44e9d309bb3e992611335f466207319e4b97f8263e474d1c4540aec539f7492c88a0480e8926ce382
          HONO_LOG_LEVEL_TEST: ${{ vars.HONO_LOG_LEVEL_TEST }}
        run: |
          IMAGE_NAME="ghcr.io/$OWNER/image-hono"

          docker build \
            --build-arg HONO_HOSTNAME=$HONO_HOSTNAME \
            --build-arg HONO_PORT=$HONO_PORT \
            --build-arg HONO_NEXTJS_ORIGIN=$HONO_NEXTJS_ORIGIN \
            --build-arg HONO_BETTER_AUTH_URL=$HONO_BETTER_AUTH_URL \
            --build-arg HONO_BETTER_AUTH_SECRET=$HONO_BETTER_AUTH_SECRET \
            --build-arg HONO_LOG_LEVEL_TEST=$HONO_LOG_LEVEL_TEST \
            -t $IMAGE_NAME:latest \
            -f ./apps/hono/Dockerfile \
            ./apps/hono

          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$TIMESTAMP

  # push:
  #   - name: Log in to GitHub Container Registry (GHCR)
  #     uses: docker/login-action@v2
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GHCR_PAT }}

  #   - name: Push image-postgres to GHCR
  #     run: |
  #       IMAGE_NAME="ghcr.io/$OWNER/image-postgres"

  #       # Use the stored TIMESTAMP value
  #       docker push $IMAGE_NAME:latest
  #       docker push $IMAGE_NAME:$TIMESTAMP
