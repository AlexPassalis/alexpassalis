name: Test Build Push

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository into GitHub Actions runner (ubuntu VM)
        uses: actions/checkout@v3

      - name: Decrypt git-crypted files
        uses: sliteteam/github-action-git-crypt-unlock@1.3.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}

      - name: Set up Docker Buildx (build tool)
        uses: docker/setup-buildx-action@v2

      - name: image-hono (test)
        run: |
          docker build --target test -t image-hono-test -f ./apps/hono/Dockerfile ./apps/hono

          docker run --rm \
            --name container-hono-test \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v ./apps/hono/.env.test:/app/.env.test:ro \
            image-hono-test

  Build-And-Push:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository into GitHub Actions runner (ubuntu VM)
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (build tool)
        uses: docker/setup-buildx-action@v2

      - name: Convert the repository owner name to lowercase
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "OWNER=$OWNER" >> $GITHUB_ENV

      - name: Define image environment variables
        run: |
          echo "IMAGE_POSTGRES=ghcr.io/$OWNER/image-postgres" >> $GITHUB_ENV
          echo "IMAGE_HONO=ghcr.io/$OWNER/image-hono" >> $GITHUB_ENV
          # echo "IMAGE_NEXTJS=ghcr.io/$OWNER/image-nextjs" >> $GITHUB_ENV
          # echo "IMAGE_NGINX=ghcr.io/$OWNER/image-nginx" >> $GITHUB_ENV

      - name: Generate a common TIMESTAMP for all images
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: image-postgres (build and tag)
        run: |
          docker build \
          -t $IMAGE_POSTGRES:latest \
          -f ./apps/postgres/Dockerfile \
          ./apps/postgres

          docker tag \
          $IMAGE_POSTGRES:latest \
          $IMAGE_POSTGRES:$TIMESTAMP

      - name: image-hono (build and tag)
        run: |
          docker build \
          -t $IMAGE_HONO:latest \
          -f ./apps/hono/Dockerfile \
          ./apps/hono

          docker tag \
          $IMAGE_HONO:latest \
          $IMAGE_HONO:$TIMESTAMP

      # - name: image-nextjs (build and tag)
      #   run: |
      #     docker build \
      #     --build-arg NEXT_PUBLIC_BETTER_AUTH_URL=https://localhost/api/auth \
      #     -t $IMAGE_NEXTJS:latest \
      #     -f ./apps/nextjs/Dockerfile \
      #     ./apps/nextjs

      #     docker tag \
      #     $IMAGE_NEXTJS:latest \
      #     $IMAGE_NEXTJS:$TIMESTAMP

      # - name: image-nginx (build and tag)
      #   run: |
      #     docker build \
      #     -t $IMAGE_NGINX:latest \
      #     -f ./apps/nginx/Dockerfile \
      #     ./apps/nginx

      #     docker tag \
      #     $IMAGE_NGINX:latest \
      #     $IMAGE_NGINX:$TIMESTAMP

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push images to GHCR
        run: |
          docker push $IMAGE_POSTGRES:latest
          docker push $IMAGE_POSTGRES:$TIMESTAMP

          docker push $IMAGE_HONO:latest
          docker push $IMAGE_HONO:$TIMESTAMP

          # docker push $IMAGE_NEXTJS:latest
          # docker push $IMAGE_NEXTJS:$TIMESTAMP

          # docker push $IMAGE_NGINX:latest
          # docker push $IMAGE_NGINX:$TIMESTAMP
